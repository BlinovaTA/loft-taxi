{"version":3,"sources":["store/actions/card.js","store/actions/address.js","store/actions/authorization.js","components/input.js","components/login.js","components/registration.js","img/big-logo.svg","constants.js","pages/login-page.js","components/map.js","img/logo.svg","components/header.js","store/actions/mapRoute.js","components/route-form.js","pages/map-page.js","img/small-logo.svg","img/chip.svg","img/circles.svg","pages/profile-page.js","route/PrivateRoute.js","App.js","localstorage.js","store/reducers/authorization.js","store/reducers/card.js","store/reducers/address.js","store/reducers/mapRoute.js","store/reducers/index.js","api.js","store/sagas/authorization.js","store/sagas/card.js","store/sagas/address.js","store/sagas/mapRoute.js","store/sagas/index.js","store/store.js","index.js"],"names":["SET_CARD_SUCCESS","SET_CARD_FAILURE","SET_CARD_DATA","GET_CARD_DATA","setCardSuccess","cardNumber","expiryDate","cardName","cvc","type","payload","setCardFailure","error","GET_ADDRESS_LIST","SET_ADDRESS_LIST_SUCCESS","SET_ADDRESS_LIST_FAILURE","setAddressListFailure","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT","AUTHENTICATE","REGISTRATION","logInSuccess","token","logInFailure","Input","title","name","register","required","maxLength","value","className","htmlFor","defaultValue","id","Login","useDispatchHook","useDispatch","formChange","dispatch","useForm","handleSubmit","onSubmit","data","email","password","authenticate","banner","message","showIcon","data-testid","onClick","Registration","registration","PAGES","map","key","link","profile","login","PAGES_KEYS","Object","keys","connect","state","authorization","useState","isLogin","setIsLogin","alt","src","icon","isLoggedIn","to","Map","mapContainer","React","createRef","count","getLayerData","coords","source","properties","geometry","coordinates","layout","paint","getFlyToData","center","speed","renderMap","route","props","current","removeLayer","addLayer","flyTo","mapboxgl","accessToken","this","container","style","zoom","remove","ref","Component","mapRoute","Header","active","page","linkClick","e","target","logOut","logo","SET_ROUTE_SUCCESS","SET_ROUTE_FAILURE","GET_ROUTE","setRouteFailure","RouteForm","startAddress","endAddress","startAddressChange","setState","endAddressChange","sendOrder","preventDefault","getRoute","address","isPaymentData","routeError","control","base","border","boxShadow","disabled","isLoading","tip","color","isClearable","options","list","filter","item","placeholder","styles","onChange","classNames","card","MapPage","PureComponent","isEdit","setIsEdit","setCardNumber","setExpiryDate","setCardName","setCVC","useEffect","setCardData","smallLogo","chip","circles","component","rest","render","addressList","getCardData","getAddressList","length","exact","path","LoginPage","Profile","setLoginDataToLocalStorage","localStorage","setItem","JSON","stringify","localStorageData","getItem","parse","initialState","combineReducers","action","Boolean","setLogIn","a","fetch","method","body","headers","then","res","json","setRegistrationToServer","setCardDataToServer","success","getCardDataFromServer","getAddressListFromServer","getRouteFromServer","authenticateSaga","authorizationSaga","setRegistration","registrationSaga","call","put","takeEvery","setCardDataSaga","getCardDataSaga","hasOwnProperty","addressListSaga","addresses","label","routeSaga","rootSaga","all","fork","sagaMiddleware","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.87904995.chunk.js","sourcesContent":["export const SET_CARD_SUCCESS = 'SET_CARD_SUCCESS';\nexport const SET_CARD_FAILURE = 'SET_CARD_FAILURE';\nexport const SET_CARD_DATA = 'SET_CARD_DATA';\nexport const GET_CARD_DATA = 'GET_CARD_DATA';\n\nexport const setCardSuccess = (cardNumber, expiryDate, cardName, cvc) => ({\n  type: SET_CARD_SUCCESS,\n  payload: { cardNumber, expiryDate, cardName, cvc },\n});\n\nexport const setCardFailure = (error) => ({\n  type: SET_CARD_FAILURE,\n  payload: { error },\n});\n\nexport const setCardData = (cardNumber, expiryDate, cardName, cvc, token) => ({\n  type: SET_CARD_DATA,\n  payload: { cardNumber, expiryDate, cardName, cvc, token },\n});\n\nexport const getCardData = (token) => ({\n  type: GET_CARD_DATA,\n  payload: { token },\n});","export const GET_ADDRESS_LIST = 'GET_ADDRESS_LIST';\nexport const SET_ADDRESS_LIST_SUCCESS = 'SET_ADDRESS_LIST_SUCCESS';\nexport const SET_ADDRESS_LIST_FAILURE = 'SET_ADDRESS_LIST_FAILURE';\n\nexport const getAddressList = () => ({\n  type: GET_ADDRESS_LIST,\n});\n\nexport const setAddressListSuccess = (list) => ({\n  type: SET_ADDRESS_LIST_SUCCESS,\n  payload: { list }\n});\n\nexport const setAddressListFailure = (error) => ({\n  type: SET_ADDRESS_LIST_FAILURE,\n  payload: { error }\n});","export const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport const LOG_OUT = 'LOG_OUT';\nexport const AUTHENTICATE = \"AUTHENTICATE\";\nexport const REGISTRATION = \"REGISTRATION\";\n\nexport const logInSuccess = (token) => ({\n  type: LOG_IN_SUCCESS,\n  payload: { token }\n});\n\nexport const logInFailure = (error) => ({\n  type: LOG_IN_FAILURE,\n  payload: { error }\n});\n\nexport const logOut = () => ({ type: LOG_OUT });\n\nexport const authenticate = (email, password) => ({\n  type: AUTHENTICATE,\n  payload: { email, password },\n});\n\nexport const registration = (email, password, name) => ({\n  type: REGISTRATION,\n  payload: { email, password, name },\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Input = ({ title, name, type, register, required, maxLength, value }) => {\n  return (\n    <div className='form__block'>\n      <label htmlFor={name} className='form__item-title'>{title}</label>\n      <input defaultValue={value} type={type} className='form__input' name={name} id={name} {...register(name, { required, maxLength: maxLength })} />\n    </div>\n  )\n}\n\nInput.propTypes = {\n  title: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  register: PropTypes.func,\n  required: PropTypes.bool,\n  maxLength: PropTypes.number,\n  value: PropTypes.string\n}\n\nexport default Input;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { authenticate } from \"../store/actions/authorization\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport Alert from 'antd/lib/alert';\nimport Input from './input';\nimport '../scss/form.scss';\nimport '../scss/button.scss';\n\nconst Login = ({ useDispatchHook = useDispatch, formChange, error }) => {\n  const dispatch = useDispatchHook();\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    const { email, password } = data;\n    dispatch(authenticate(email, password));\n  };\n\n  return (\n    <div className='wrapper login-wrapper'>\n      <div className='title-container'>\n        <h1 className='title'>Войти</h1>\n      </div>\n      <form className='form login-form' onSubmit={handleSubmit(onSubmit)}>\n        {error && <Alert className='form__block' banner message={error} type='error' showIcon />}\n        <Input title='Email' name='email' type='email' register={register} />\n        <Input title='Пароль' name='password' type='password' register={register} />\n        <div className='form__block'>\n          <p className='form__forgot-password'>Забыли пароль?</p>\n        </div>\n        <button data-testid='login' type='submit' className='form__button button'>Войти</button>\n        <div className='form__switch'>\n          <span className='form__to-title'>Новый пользователь? </span>\n          <button className='form__to-button' onClick={formChange}>Регистрация</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  useDispatchHook: PropTypes.func,\n  formChange: PropTypes.func,\n  error: PropTypes.string\n}\n\nexport default Login;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { registration } from \"../store/actions/authorization\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport Alert from 'antd/lib/alert';\nimport Input from './input';\nimport '../scss/form.scss';\nimport '../scss/button.scss';\n\nconst Registration = ({ useDispatchHook = useDispatch, formChange, error }) => {\n  const dispatch = useDispatchHook();\n  const { register, handleSubmit } = useForm();\n\n  const onSubmit = (data) => {\n    const { email, password, name } = data;\n    dispatch(registration(email, password, name));\n  };\n\n  return (\n    <div className='wrapper registration-wrapper'>\n      <div className='title-container'>\n        <h1 className='title'>Регистрация</h1>\n      </div>\n      <form className='form registration-form' onSubmit={handleSubmit(onSubmit)}>\n        {error && <Alert className='form__block' banner message={error} type='error' showIcon />}\n        <Input title='Email*' name='email' type='email' register={register} />\n        <Input title='Как вас зовут?*' name='name' type='text' register={register} />\n        <Input title='Придумайте пароль*' name='password' type='password' register={register} />\n        <button data-testid='registration' className='form__button button' type='submit'>Зарегистрироваться</button>\n        <div className='form__switch'>\n          <span className='form__to-title'>Уже зарегистрированны?</span>\n          <button className='form__to-button' onClick={formChange}>Войти</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nRegistration.propTypes = {\n  useDispatchHook: PropTypes.func,\n  formChange: PropTypes.func,\n  error: PropTypes.string\n}\n\nexport default Registration;\n","export default __webpack_public_path__ + \"static/media/big-logo.14346112.svg\";","export const PAGES = {\n  map: { key: 'map', name: 'Карта', link: '/map' },\n  profile: { key: 'profile', name: 'Профиль', link: '/profile' },\n  login: { key: 'login', name: 'Выйти', link: '/' }\n};\n\nexport const PAGES_KEYS = Object.keys(PAGES);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Login from '../components/login';\nimport Registration from '../components/registration';\nimport icon from '../img/big-logo.svg';\nimport { PAGES } from '../constants';\nimport '../scss/login-page.scss';\nimport { Redirect } from 'react-router-dom';\n\nconst LoginPage = ({ authorization }) => {\n  const [isLogin, setIsLogin] = useState(true);\n\n  const formChange = () => {\n    setIsLogin(!isLogin);\n  }\n\n  return (\n    <div className='login-page'>\n      <div className='login-page__icon'>\n        <img className='login-page__img' alt='big-logo' src={icon} />\n      </div>\n      <div className='login-page__map'>\n        {\n          isLogin\n            ? <Login formChange={formChange} error={authorization.error.authorization} />\n            : <Registration formChange={formChange} error={authorization.error.registration} />\n        }\n      </div>\n      {authorization.isLoggedIn && <Redirect to={PAGES.map.link} />}\n    </div>\n  )\n}\n\nLoginPage.propTypes = {\n  authorization: PropTypes.object\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    authorization: state.authorization\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);","import React, { Component } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport { connect } from 'react-redux';\n\nclass Map extends Component {\n  map = null;\n  mapContainer = React.createRef();\n  id = null;\n  count = 0;\n\n  componentDidMount() {\n    mapboxgl.accessToken = 'pk.eyJ1IjoidGFua2E5MSIsImEiOiJja21ubGZxZjgweTEyMnFyemdsdzBmN3BpIn0.GcPUVO9XJl5iWk1gMbEOXA';\n    this.map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v9\",\n      center: [30.3056504, 59.9429126],\n      zoom: 10\n    });\n  }\n\n  componentWillUnmount() {\n    this.map.remove();\n  }\n\n  componentDidUpdate() {\n    this.renderMap();\n  }\n\n  getLayerData = (id, coords) => ({\n    id,\n    type: \"line\",\n    source: {\n      type: \"geojson\",\n      data: {\n        type: \"Feature\",\n        properties: {},\n        geometry: {\n          type: \"LineString\",\n          coordinates: coords\n        }\n      }\n    },\n    layout: {\n      \"line-join\": \"round\",\n      \"line-cap\": \"round\"\n    },\n    paint: {\n      \"line-color\": \"#ffc617\",\n      \"line-width\": 8\n    }\n  })\n\n  getFlyToData = center => ({\n    center,\n    speed: 0.5\n  })\n\n  renderMap = () => {\n    const { route } = this.props;\n\n    if (!this.mapContainer.current) {\n      return;\n    }\n\n    if (this.id) {\n      this.map.removeLayer(this.id);\n    }\n\n    this.id = `${this.count++}`;\n    this.map.addLayer(this.getLayerData(this.id, route));\n    this.map.flyTo(this.getFlyToData(route[0]));\n  };\n\n  render() {\n    return <div className='map-wrapper'>\n      <div data-testid='map' className='map' ref={this.mapContainer} />\n    </div>\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    route: state.mapRoute.route\n  }\n}\n\nexport default connect(mapStateToProps)(Map);","export default __webpack_public_path__ + \"static/media/logo.b62304ff.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logOut } from '../store/actions/authorization';\nimport { PAGES, PAGES_KEYS } from '../constants';\nimport logo from '../img/logo.svg';\nimport '../scss/header.scss';\nimport '../scss/menu.scss';\nimport { Link } from 'react-router-dom';\n\nclass Header extends Component {\n  static propTypes = {\n    page: PropTypes.string,\n    logOut: PropTypes.func\n  }\n\n  state = { active: this.props.page };\n\n  linkClick = (e) => {\n    if (e.target.id === PAGES.login.key) {\n      this.props.logOut();\n    }\n  }\n\n  render() {\n    return (\n      <header className='header'>\n        <div className='header__logo'>\n          <img alt='logo' className='logo__img' src={logo} />\n        </div>\n        <ul className='header__menu menu'>\n          {\n            PAGES_KEYS.map(page =>\n              <li key={page}>\n                <Link\n                  to={PAGES[page].link}\n                  onClick={this.linkClick}\n                  id={page}\n                  className={`menu__item ${this.state.active === page ? ' menu__item--active' : ''}`}\n                >\n                  {PAGES[page].name}\n                </Link>\n              </li>\n            )\n          }\n        </ul>\n      </header>\n    )\n  }\n}\n\nexport default connect(null, { logOut })(Header);","export const SET_ROUTE_SUCCESS = 'SET_ROUTE_SUCCESS';\nexport const SET_ROUTE_FAILURE = 'SET_ROUTE_FAILURE';\nexport const GET_ROUTE = 'GET_ROUTE';\n\nexport const setRouteSuccess = (route) => ({\n  type: SET_ROUTE_SUCCESS,\n  payload: { route }\n});\n\nexport const setRouteFailure = (error) => ({\n  type: SET_ROUTE_FAILURE,\n  payload: { error }\n});\n\nexport const getRoute = (startAddress, endAddress) => ({\n  type: GET_ROUTE,\n  payload: { startAddress, endAddress }\n});","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classNames from \"classnames\";\nimport Alert from 'antd/lib/alert';\nimport Select from 'react-select';\nimport Spin from 'antd/lib/spin';\nimport { getRoute } from '../store/actions/mapRoute';\nimport '../scss/route-form.scss';\nimport '../scss/select.scss';\n\nclass RouteForm extends Component {\n  static propTypes = {\n    getRoute: PropTypes.func,\n    address: PropTypes.object,\n    isPaymentData: PropTypes.bool,\n    routeError: PropTypes.string\n  }\n\n  state = {\n    startAddress: '',\n    endAddress: ''\n  }\n\n  startAddressChange = (e) => {\n    const startAddress = e ? e.value : '';\n    this.setState({ startAddress });\n  }\n\n  endAddressChange = (e) => {\n    const endAddress = e ? e.value : '';\n    this.setState({ endAddress });\n  }\n\n  sendOrder = (e) => {\n    e.preventDefault();\n\n    const { startAddress, endAddress } = this.state;\n\n    this.props.getRoute(startAddress, endAddress);\n  }\n\n  render() {\n    const { address, isPaymentData, routeError } = this.props;\n    const { startAddress, endAddress } = this.state;\n\n    const style = {\n      control: base => ({\n        ...base,\n        border: 0,\n        boxShadow: \"none\"\n      })\n    };\n\n    const disabled = startAddress === '' || endAddress === '';\n\n    return (\n      <form className='route-form' onSubmit={this.sendOrder}>\n        { address.isLoading ? <div className=\"route-form__no-data\" data-testid=\"is-loading\" ><Spin tip=\"Загрузка...\" color={'#faad14'} /></div> :\n          address.error ? <div className=\"route-form__no-data\" data-testid=\"error\" >{address.error}</div> :\n            isPaymentData ?\n              <>\n                {routeError && <Alert className='route-form__alert' banner message={routeError} type='error' showIcon />}\n                <div className='selects-wrapper'>\n                  <div className='item-wrapper' data-testid=\"from\">\n                    <Select\n                      className='select'\n                      isClearable={true}\n                      options={address.list.filter(item => item.value !== startAddress && item.value !== endAddress)}\n                      placeholder='Откуда'\n                      styles={style}\n                      onChange={this.startAddressChange}\n                    />\n                  </div>\n                  <div className='item-wrapper' data-testid=\"to\">\n                    <Select\n                      className='select'\n                      isClearable={true}\n                      options={address.list.filter(item => item.value !== endAddress && item.value !== startAddress)}\n                      placeholder='Куда'\n                      styles={style}\n                      onChange={this.endAddressChange}\n                    />\n                  </div>\n                </div>\n                <button\n                  data-testid=\"order\"\n                  type='submit'\n                  className={classNames('form__button', 'button', { 'button--disabled': disabled })}\n                  disabled={disabled}\n                >\n                  Заказать\n                </button>\n              </>\n              : <div className=\"route-form__no-data\" data-testid=\"no-payment\" >Для заказа введите платежные данные на странице <b>Профиль</b></div>}\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    address: state.address,\n    isPaymentData: state.card.isPaymentData,\n    routeError: state.mapRoute.error\n  }\n}\n\nexport default connect(mapStateToProps, { getRoute })(RouteForm)\n","import React, { PureComponent } from 'react';\nimport Map from '../components/map';\nimport Header from '../components/header';\nimport RouteForm from '../components/route-form';\nimport { PAGES } from '../constants';\n\nexport default class MapPage extends PureComponent {\n  render() {\n    return (\n      <div className='page-container'>\n        <Header page={PAGES.map.key} />\n        <Map />\n        <RouteForm />\n      </div>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/small-logo.860ed155.svg\";","export default __webpack_public_path__ + \"static/media/chip.c84e7851.svg\";","export default __webpack_public_path__ + \"static/media/circles.11ada678.svg\";","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useForm } from \"react-hook-form\";\nimport { setCardData } from '../store/actions/card';\nimport Header from '../components/header';\nimport Input from '../components/input';\nimport smallLogo from '../img/small-logo.svg';\nimport chip from '../img/chip.svg';\nimport circles from '../img/circles.svg';\nimport { PAGES } from '../constants';\nimport '../scss/form.scss';\nimport '../scss/card-layout.scss';\n\nconst Profile = ({ useDispatchHook = useDispatch, token, card }) => {\n  const dispatch = useDispatchHook();\n  const { register, handleSubmit } = useForm();\n  const [isEdit, setIsEdit] = useState(true);\n  const [cardNumber, setCardNumber] = useState(card.cardNumber);\n  const [expiryDate, setExpiryDate] = useState(card.expiryDate);\n  const [cardName, setCardName] = useState(card.cardName);\n  const [cvc, setCVC] = useState(card.cvc);\n\n  useEffect(() => {\n    setCardNumber(card.cardNumber);\n    setExpiryDate(card.expiryDate);\n    setCardName(card.cardName);\n    setCVC(card.cvc);\n  }, [card.cardNumber, card.expiryDate, card.cardName, card.cvc]);\n\n  const onSubmit = (data) => {\n    const { cardNumber, expiryDate, cardName, cvc } = data;\n\n    dispatch(setCardData(\n      cardNumber === '' ? card.cardNumber : cardNumber,\n      expiryDate === '' ? card.expiryDate : expiryDate,\n      cardName === '' ? card.cardName : cardName,\n      cvc === '' ? card.cvc : cvc,\n      token\n    ));\n\n    setIsEdit(false);\n  };\n\n  return (\n    <div className='page-container'>\n      <Header page={PAGES.profile.key} />\n      <div className='page-content'>\n        <div className='container'>\n          <div className={`wrapper ${isEdit ? 'edit-profile-wrapper' : 'gotomap-profile-wrapper'}`}>\n            <h1 className='title'>Профиль</h1>\n            <p className='subtitle'>\n              {\n                isEdit ? 'Введите платежные данные' :\n                  card.error ? card.error :\n                    'Платёжные данные обновлены. Теперь вы можете заказывать такси.'\n              }\n            </p>\n            {\n              isEdit\n                ?\n                <form className='form profile-form' onSubmit={handleSubmit(onSubmit)}>\n                  <div className='form__row'>\n                    <div className='form__col'>\n                      <Input title='Имя владельца' name='cardName' type='text' register={register} value={cardName} />\n                      <Input title='Номер карты' name='cardNumber' type='text' register={register} value={cardNumber} />\n                      <div className='form__row'>\n                        <div className='form__col'>\n                          <Input title='MM/YY' name='expiryDate' type='text' register={register} value={expiryDate} />\n                        </div>\n                        <div className='form__col'>\n                          <Input title='CVC' name='cvc' type='text' register={register} value={cvc} maxLength={3} />\n                        </div>\n                      </div>\n                    </div>\n                    <div className='form__col'>\n                      <div className='card-layout'>\n                        <div className='card-layout__header'>\n                          <img className='card-layout__small-logo' alt='smallLogo' src={smallLogo} />\n                          <div className='card-layout__card-expiry-date'>{expiryDate}</div>\n                        </div>\n                        <div className='card-layout__content'>\n                          <p>{cardNumber}</p>\n                        </div>\n                        <div className='card-layout__footer'>\n                          <img className='card-layout__chip' alt='chip' src={chip} />\n                          <img className='card-layout__circles' alt='circles' src={circles} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <button data-testid='save' className='button' type='submit'>Сохранить</button>\n                </form>\n                :\n                <Link className='button' to={PAGES.map.link}>Перейти на карту</Link>\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nProfile.propTypes = {\n  useDispatchHook: PropTypes.func,\n  token: PropTypes.string,\n  card: PropTypes.object\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    token: state.authorization.token,\n    card: state.card\n  }\n}\n\nexport default connect(mapStateToProps)(Profile);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { PAGES } from '../constants';\n\nexport const PrivateRoute = ({ component: Component, isLoggedIn, ...rest }) => (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={PAGES.login.link} />\n        )\n      }\n    />\n  );\n\nconst mapStateToProps = function (state) {\n  return {\n    isLoggedIn: state.authorization.isLoggedIn\n  }\n}\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getCardData } from './store/actions/card';\nimport { getAddressList } from './store/actions/address';\nimport LoginPage from './pages/login-page';\nimport MapPage from './pages/map-page';\nimport Profile from './pages/profile-page';\nimport PrivateRoute from './route/PrivateRoute';\nimport { PAGES } from './constants';\nimport './scss/App.scss';\n\nconst App = ({ isLoggedIn, getCardData, token, getAddressList, addressList }) => {\n\n  useEffect(() => {\n    if (!addressList.length) {\n      getAddressList();\n    }\n\n    if (isLoggedIn) {\n      getCardData(token);\n    }\n  }, [isLoggedIn]);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path={PAGES.login.link} component={LoginPage} />\n        <PrivateRoute path={PAGES.map.link} component={MapPage} />\n        <PrivateRoute path={PAGES.profile.link} component={Profile} />\n        <Route>\n          <Redirect to={PAGES.login.link} />\n        </Route>\n      </Switch>\n    </div>\n  )\n}\n\nconst mapStateToProps = function (state) {\n  return {\n    token: state.authorization.token,\n    isLoggedIn: state.authorization.isLoggedIn,\n    addressList: state.address.list\n  }\n}\n\nexport default connect(mapStateToProps, { getCardData, getAddressList })(App);","export const setLoginDataToLocalStorage = (isLoggedIn, token) => {\n  localStorage.setItem('loginData', JSON.stringify({ isLoggedIn, token }));\n};\n\nexport const getLoginDataFromLocalStorage = () => {\n  if (!localStorage.getItem('loginData')) {\n    localStorage.setItem('loginData', JSON.stringify({ isLoggedIn: false, token: '' }));\n  }\n\n  return JSON.parse(localStorage.getItem('loginData'));\n};","import { LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT } from '../actions/authorization';\nimport { setLoginDataToLocalStorage, getLoginDataFromLocalStorage } from '../../localstorage';\n\nconst localStorageData = getLoginDataFromLocalStorage();\n\nconst initialState = {\n  isLoggedIn: localStorageData.isLoggedIn,\n  token: localStorageData.token,\n  error: {\n    authorization: '',\n    registration: ''\n  }\n}\n\nexport default function authorization(state = initialState, action) {\n  switch (action.type) {\n    case LOG_IN_SUCCESS: {\n      setLoginDataToLocalStorage(true, action.payload.token);\n\n      return {\n        isLoggedIn: true,\n        token: action.payload.token,\n        error: ''\n      };\n    }\n\n    case LOG_IN_FAILURE: {\n      return {\n        isLoggedIn: false,\n        token: '',\n        error: action.payload.error\n      };\n    }\n\n    case LOG_OUT: {\n      setLoginDataToLocalStorage(false, '');\n\n      return {\n        isLoggedIn: false,\n        token: '',\n        error: ''\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}","import { SET_CARD_SUCCESS, SET_CARD_FAILURE } from '../actions/card';\n\n\nconst initialState = {\n  cardNumber: '',\n  expiryDate: '',\n  cardName: '',\n  cvc: '',\n  isPaymentData: '',\n  error: ''\n}\n\nexport default function card(state = initialState, action) {\n  switch (action.type) {\n    case SET_CARD_SUCCESS: {\n      const { cardNumber, expiryDate, cardName, cvc } = action.payload;\n\n      return {\n        cardNumber: cardNumber,\n        expiryDate: expiryDate,\n        cardName: cardName,\n        cvc: cvc,\n        isPaymentData: Boolean(cardNumber && expiryDate && cardName && cvc),\n        error: ''\n      };\n    }\n\n    case SET_CARD_FAILURE: {\n      return {\n        cardNumber: state.cardNumber,\n        expiryDate: state.expiryDate,\n        cardName: state.cardName,\n        cvc: state.cvc,\n        isPaymentData: state.isPaymentData,\n        error: action.payload.error\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}","import { SET_ADDRESS_LIST_SUCCESS, SET_ADDRESS_LIST_FAILURE, GET_ADDRESS_LIST } from '../actions/address';\n\nconst initialState = {\n  list: [],\n  error: '',\n  isLoading: false\n}\n\nexport default function address(state = initialState, action) {\n  switch (action.type) {\n    case GET_ADDRESS_LIST: {\n      return {\n        list: [],\n        error: '',\n        isLoading: true\n      };\n    }\n\n    case SET_ADDRESS_LIST_SUCCESS: {\n      return {\n        list: action.payload.list,\n        error: '',\n        isLoading: false\n      };\n    }\n\n    case SET_ADDRESS_LIST_FAILURE: {\n      return {\n        list: [],\n        error: action.payload.error,\n        isLoading: false\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}","import { SET_ROUTE_SUCCESS, SET_ROUTE_FAILURE } from '../actions/mapRoute';\n\nconst initialState = {\n  route: [],\n  error: ''\n}\n\nexport default function mapRoute(state = initialState, action) {\n  switch (action.type) {\n    case SET_ROUTE_SUCCESS: {\n      return {\n        route: action.payload.route,\n        error: ''\n      };\n    }\n\n    case SET_ROUTE_FAILURE: {\n      return {\n        route: [],\n        error: action.payload.error\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}","import { combineReducers } from 'redux';\nimport authorization from './authorization';\nimport card from './card';\nimport address from './address';\nimport mapRoute from './mapRoute';\n\nexport default combineReducers({authorization, card, address, mapRoute});","export const setLogIn = async (email, password) => {\n  return fetch('https://loft-taxi.glitch.me/auth', {\n    method: 'POST',\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => res.json());\n};\n\nexport const setRegistrationToServer = async (email, password, name) => {\n  return fetch('https://loft-taxi.glitch.me/register', {\n    method: 'POST',\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password,\n      \"name\": name,\n      \"surname\": name\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => res.json());\n};\n\nexport const setCardDataToServer = async (cardNumber, expiryDate, cardName, cvc, token) => {\n  return fetch('https://loft-taxi.glitch.me/card', {\n    method: 'POST',\n    body: JSON.stringify({\n      \"cardNumber\": cardNumber,\n      \"expiryDate\": expiryDate,\n      \"cardName\": cardName,\n      \"cvc\": cvc,\n      \"token\": token\n    }),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(res => res.json())\n    .then(data => data.success);\n};\n\nexport const getCardDataFromServer = async (token) => {\n  return fetch(`https://loft-taxi.glitch.me/card?token=${token}`)\n    .then(res => res.json());\n};\n\nexport const getAddressListFromServer = async () => {\n  return fetch('https://loft-taxi.glitch.me/addressList')\n    .then(res => res.json());\n};\n\nexport const getRouteFromServer = async (startAddress, endAddress) => {\n  return fetch(`https://loft-taxi.glitch.me/route?address1=${startAddress}&address2=${endAddress}`)\n    .then(res => res.json());\n};","import { AUTHENTICATE, REGISTRATION, logInSuccess, logInFailure } from \"../actions/authorization\";\nimport { setLogIn, setRegistrationToServer } from \"../../api\";\nimport { takeEvery, call, put } from \"redux-saga/effects\";\n\nexport function* authenticateSaga(action) {\n  try {\n    const { email, password } = action.payload;\n    const data = yield call(setLogIn, email, password);\n\n    if (data.success) {\n      yield put(logInSuccess(data.token));\n    } else {\n      yield put(logInFailure({authorization: 'Ошибка авторизации', registration: ''}));\n    }\n  } catch {\n    yield put(logInFailure({authorization: 'Сервер не отвечает', registration: ''}));\n  }\n}\n\nexport function* authorizationSaga() {\n  yield takeEvery(AUTHENTICATE, authenticateSaga);\n}\n\nexport function* setRegistration(action) {\n  try {\n    const { email, password, name } = action.payload;\n    const data = yield call(setRegistrationToServer, email, password, name);\n\n    if (data.success) {\n      yield put(logInSuccess(data.token));\n    } else {\n      yield put(logInFailure({authorization: '', registration: 'Ошибка регистрации'}));\n    }\n  } catch {\n    yield put(logInFailure({authorization: '', registration: 'Сервер не отвечает'}));\n  }\n\n}\n\nexport function* registrationSaga() {\n  yield takeEvery(REGISTRATION, setRegistration);\n}","import { SET_CARD_DATA, GET_CARD_DATA, setCardSuccess, setCardFailure } from \"../actions/card\";\nimport { setCardDataToServer, getCardDataFromServer } from '../../api';\nimport { takeEvery, call, put } from \"redux-saga/effects\";\n\nexport function* setCardDataSaga(action) {\n  try {\n    const { cardNumber, expiryDate, cardName, cvc, token } = action.payload;\n    const success = yield call(setCardDataToServer, cardNumber, expiryDate, cardName, cvc, token);\n\n    if (success) {\n      yield put(setCardSuccess(cardNumber, expiryDate, cardName, cvc));\n    } else {\n      yield put(setCardFailure('Не удалось сохранить данные карты на сервер'));\n    }\n  } catch {\n    yield put(setCardFailure('Сервер не отвечает'));\n  }\n}\n\nexport function* setCardData() {\n  yield takeEvery(SET_CARD_DATA, setCardDataSaga);\n}\n\nexport function* getCardDataSaga(action) {\n  try {\n    const { token } = action.payload;\n    const data = yield call(getCardDataFromServer, token);\n\n    if (data.hasOwnProperty('id')) {\n      yield put(setCardSuccess(data.cardNumber, data.expiryDate, data.cardName, data.cvc));\n    } else {\n      yield put(setCardFailure('Не удалось получить данные карты с сервера'));\n    }\n  } catch {\n    yield put(setCardFailure('Сервер не отвечает'));\n  }\n}\n\nexport function* getCardData() {\n  yield takeEvery(GET_CARD_DATA, getCardDataSaga);\n}","import { GET_ADDRESS_LIST, setAddressListSuccess, setAddressListFailure } from \"../actions/address\";\nimport { getAddressListFromServer } from '../../api';\nimport { takeEvery, call, put } from \"redux-saga/effects\";\n\nexport function* addressListSaga() {\n  try {\n    const data = yield call(getAddressListFromServer);\n\n    if (data.hasOwnProperty('addresses')) {\n      const addresses = data.addresses.map(item => ({ value: item, label: item }))\n\n      yield put(setAddressListSuccess(addresses));\n    } else {\n      yield put(setAddressListFailure('Ошибка загрузки списка адресов'));\n    }\n  } catch {\n    yield put(setAddressListFailure('Сервер не отвечает'));\n  }\n}\n\nexport function* getAddressList() {\n  yield takeEvery(GET_ADDRESS_LIST, addressListSaga);\n}","import { GET_ROUTE, setRouteSuccess, setRouteFailure } from \"../actions/mapRoute\";\nimport { getRouteFromServer } from '../../api';\nimport { takeEvery, call, put } from \"redux-saga/effects\";\n\nexport function* routeSaga(action) {\n  try {\n    const { startAddress, endAddress } = action.payload;\n    const data = yield call(getRouteFromServer, startAddress, endAddress);\n\n    if (data && data.length) {\n      yield put(setRouteSuccess(data));\n    } else {\n      yield put(setRouteFailure('Ошибка получения маршрута'));\n    }\n  } catch {\n    yield put(setRouteFailure('Сервер не отвечает'));\n  }\n}\n\nexport function* getRoute() {\n  yield takeEvery(GET_ROUTE, routeSaga);\n}","import { fork, all } from \"redux-saga/effects\";\nimport { authorizationSaga, registrationSaga } from './authorization';\nimport { setCardData, getCardData } from './card';\nimport { getAddressList } from './address';\nimport { getRoute } from './mapRoute';\n\nexport default function* rootSaga() {\n  yield all([\n    fork(authorizationSaga),\n    fork(registrationSaga),\n    fork(setCardData),\n    fork(getCardData),\n    fork(getAddressList),\n    fork(getRoute)\n  ]);\n}","import { createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducer from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(rootSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}